##
# Project environment variables.
#
# This is a single location where defined variables control how the stack
# operates and should be the primary place for modifications. Avoid overriding
# values in scripts or configuration files to simplify future updates and
# centralize changes.
#
# Values must be scalar and cannot reference another variable.
# Do not enclose values in double quotes unless they include spaces.
#
# To apply any changes made to this file, run `docker-compose up cli -d` or
# `ahoy up cli`.
#
# To customize variables locally, copy `.env.local.example` to `.env.local`.
#
# @see https://vortex.drevops.com/workflows/variables

################################################################################
#                                  GENERAL                                     #
################################################################################

# Project name.
#
# Drives internal naming within the codebase.
# Does not affect the names of containers and development URL - those depend on
# the project directory and can be overridden with $COMPOSE_PROJECT_NAME.
VORTEX_PROJECT=your_site

# Name of the web root directory containing a Drupal codebase.
VORTEX_WEBROOT=web

# The timezone for the containers.
VORTEX_TZ="Australia/Melbourne"

################################################################################
#                                  DRUPAL                                      #
################################################################################

# Drupal profile name (used only when installing from profile).
DRUPAL_PROFILE=standard

# Drupal theme name.
DRUPAL_THEME=your_site_theme

# Stage file proxy origin.
#
# If using Shield, the HTTP authentication credentials will be automatically
# added to the origin URL.
DRUPAL_STAGE_FILE_PROXY_ORIGIN=https://www.your-site-url.example/

# Shield message.
DRUPAL_SHIELD_PRINT="Restricted access."

#;< REDIS
# Enable Redis integration.
# See settings.redis.php for details.
DRUPAL_REDIS_ENABLED=0
#;> REDIS

#;< CLAMAV
# Enable ClamAV integration.
DRUPAL_CLAMAV_ENABLED=1

# ClamAV mode.
#
# Run ClamAV in either daemon mode by setting it to 0 (or 'daemon') or in
# executable mode by setting it to 1.
DRUPAL_CLAMAV_MODE=daemon
#;> CLAMAV

################################################################################
#                                 PROVISION                                    #
################################################################################

# By "provision", we mean the process of initialising the database (from dump
# or fresh install from profile), running updates, appying configuration
# changes, clearing caches and performing other tasks that prepare the site for
# use.
# @see https://vortex.drevops.com/workflows/provision

# Set to 1 to install a site from profile instead of the database file dump.
VORTEX_PROVISION_USE_PROFILE=0

# Overwrite a database if it exists.
#
# Usually set to 0 in deployed environments and can be temporary set to 1 for
# a specific deployment.
# Set this to 1 in .env.local to override when developing locally.
VORTEX_PROVISION_OVERRIDE_DB=0

# Skip database sanitization.
#
# Database sanitization is enabled by default in all non-production
# environments and is always skipped in the production environment.
VORTEX_PROVISION_SANITIZE_DB_SKIP=0

# Sanitization email pattern.
#
# Applied if database sanitization is enabled.
# @see https://vortex.drevops.com/workflows/build#sanitization
VORTEX_PROVISION_SANITIZE_DB_EMAIL="user_%uid@your-site-url.example"

# Put the site into a maintenance mode during site provisioning.
VORTEX_PROVISION_USE_MAINTENANCE_MODE=1

################################################################################
#                                HOSTING                                       #
################################################################################

#;< LAGOON
# Lagoon project name. May be different from $VORTEX_PROJECT.
LAGOON_PROJECT=your_site

# Dedicated branch to identify the production environment.
VORTEX_LAGOON_PRODUCTION_BRANCH=main
#;> LAGOON

#;< ACQUIA
# Acquia application name.
VORTEX_ACQUIA_APP_NAME=
#;> ACQUIA

################################################################################
#                                DATABASE                                      #
################################################################################

# Database service runs a single database within a container.
# See settings.php for database credentials defaults or run
# `ahoy drush sql:connect`.

# Database can be imported from a *file dump* into an empty database started
# from the database default image or can *exist* in a pre-built container image.
# Defaults to importing from a file.
# @see https://vortex.drevops.com/workflows/database

# Database dump directory.
VORTEX_DB_DIR=./.data

# Database dump file name.
VORTEX_DB_FILE=db.sql

# Name of the pre-built container image.
# Uncomment to use an image with a DB data loaded into it.
# @see https://github.com/drevops/mariadb-drupal-data to seed your DB image.
# VORTEX_DB_IMAGE=your_org/your_site:latest

#;< !PROVISION_USE_PROFILE
# Database can be sourced from one of the following locations:
#
# - `curl` - directly from a URL as a file using CURL.
# - `ftp` - directly from an FTP as a file using CURL.
# - `acquia` - from the latest Acquia backup via Cloud API as a file.
# - `lagoon` - from Lagoon main environment as a file.
# - `container_registry` - from the container registry as a container image.
# - `none` - not downloaded, site is freshly installed for every build.
#
# Note that "container_registry" works only for database-in-image
# database storage (when $VORTEX_DB_IMAGE variable has a value).
VORTEX_DB_DOWNLOAD_SOURCE=curl

#;< VORTEX_DB_DOWNLOAD_SOURCE_CURL
# Database dump file sourced from CURL.
#
# HTTP Basic Authentication credentials should be embedded into the value.
VORTEX_DB_DOWNLOAD_CURL_URL=
#;> VORTEX_DB_DOWNLOAD_SOURCE_CURL

# Environment to download the database from.
#
# Applies to Acquia and Lagoon environments.
VORTEX_DB_DOWNLOAD_ENVIRONMENT=prod

#;< FTP
# Database dump file sourced from FTP.

# Database dump FTP host.
VORTEX_DB_DOWNLOAD_FTP_HOST=

# Database dump FTP port.
VORTEX_DB_DOWNLOAD_FTP_PORT=21

# Database dump FTP file name.
VORTEX_DB_DOWNLOAD_FTP_FILE=db.sql
#;> FTP

#;< ACQUIA
# Acquia database name to download the database from.
VORTEX_DB_DOWNLOAD_ACQUIA_DB_NAME=your_site
#;> ACQUIA

#;> !PROVISION_USE_PROFILE

#;< DEPLOYMENT
################################################################################
#                                DEPLOYMENT                                    #
################################################################################

# Deployment occurs when tests pass in the CI environment.
# @see https://vortex.drevops.com/workflows/deployment

# The type of deployment.
#
# Combination of comma-separated values to support multiple deployment targets:
# `artifact`,`container_registry`, `webhook`, `lagoon`.
#
# See https://vortex.drevops.com/workflows/deploy
VORTEX_DEPLOY_TYPES=artifact
#;> DEPLOYMENT

#;< NOTIFICATIONS
################################################################################
#                                NOTIFICATIONS                                 #
################################################################################

# Notificaions are sent accross multiple channels before and after deployment.
# @see https://vortex.drevops.com/workflows/notifications

# The channels of the notifications.
#
# Can be a combination of comma-separated values: email,newrelic,github,jira
VORTEX_NOTIFY_CHANNELS=email

# Email to send notifications from.
VORTEX_NOTIFY_EMAIL_FROM="webmaster@your-site-url.example"

# Email address(es) to send notifications to.
#
# Multiple names can be specified as a comma-separated list of email addresses
# with optional names in the format "email|name".
# Example: "to1@example.com|Jane Doe, to2@example.com|John Doe"
VORTEX_NOTIFY_EMAIL_RECIPIENTS="webmaster@your-site-url.example"
#;> NOTIFICATIONS

#;< DEMO
################################################################################
#                                  DEMO                                        #
################################################################################
#                                                                              #
# Override project-specific values for demonstration purposes.                 #
# Used to showcase Vortex without asking users to perform additional steps.    #
# Remove this section after completing database download integration.          #
#                                                                              #
################################################################################

#;< VORTEX_DB_DOWNLOAD_SOURCE_CURL
# URL of the demo database used for demonstration with CURL database
# dump as a type of file source.
VORTEX_DB_DOWNLOAD_CURL_URL=https://github.com/drevops/vortex/releases/download/24.11.0/db_d11.demo.sql
#;> VORTEX_DB_DOWNLOAD_SOURCE_CURL

#;< VORTEX_DB_IMAGE
# The name of the demo database image used for demonstration for
# database-in-image data storage.
#; The line below will be automatically uncommented for database-in-image
#; storage. It is commented out to allow running non-database-in-image
# workflow by default.
##### VORTEX_DB_IMAGE=drevops/vortex-dev-mariadb-drupal-data-demo-11.x:latest
#;> VORTEX_DB_IMAGE
#;> DEMO
