---
ahoyapi: v2

commands:

  install:
    name: Install test dependencies.
    cmd: |
      [ -d ./tests/node_modules ] && rm -rf ./tests/node_modules
      yarn --cwd=tests install --frozen-lockfile
      [ -d ./docs/node_modules ] && rm -rf ./docs/node_modules
      yarn --cwd=docs install --frozen-lockfile
      [ -d ./installer/vendor ] && rm -rf ./installer/vendor
      composer --working-dir installer install

  docs:
    name: Start documentation server.
    cmd: |
      [ ! -d ./docs/node_modules ] && yarn --cwd=docs install --frozen-lockfile
      yarn --cwd=docs run start

  docs-serve:
    name: Serve built documentation.
    cmd: |
      [ ! -d ./docs/node_modules ] && yarn --cwd=docs install --frozen-lockfile
      yarn --cwd=docs run serve

  build-docs:
    name: Build documentation.
    cmd: |
      [ ! -d ./docs/node_modules ] && yarn --cwd=docs install --frozen-lockfile
      yarn --cwd=docs run build

  build-installer:
    name: Build documentation.
    cmd: |
      [ ! -d ./installer/vendor ] && composer --working-dir installer install
      composer --working-dir installer build

  lint:
    name: Lint Vortex project.
    cmd: |
      ahoy lint-installer
      ahoy lint-scripts
      ahoy lint-dockerfiles
      ahoy lint-docs

  lint-installer:
    cmd: composer --working-dir installer lint

  lint-scripts:
    cmd: ./tests/lint.scripts.sh

  lint-dockerfiles:
    cmd: ./tests/lint.dockerfiles.sh

  lint-docs:
    cmd: yarn --cwd=docs run lint

  test:
    name: Test Vortex project.
    cmd: |
      ahoy test-common
      ahoy test-docs

  test-bats:
    cmd: |
      [ ! -d tests/node_modules ] && yarn --cwd=tests install --frozen-lockfile
      tests/node_modules/.bin/bats --no-tempdir-cleanup --tap "$@"

  test-common:
    cmd: ./tests/test.common.sh

  test-deployment:
    cmd: ./tests/test.deployment.sh

  test-workflow:
    cmd: ./tests/test.workflow.sh

  test-docs:
    cmd: |
      [ ! -d ./docs/node_modules ] && yarn --cwd=./docs install --frozen-lockfile
      yarn --cwd=./docs run test
      yarn --cwd=./docs run spellcheck

  # If there are changes to the fixtures - this command will re-run twice reporting error the first time.
  update-fixtures:
    cmd: |
      ahoy install
      ahoy update-fixtures-no-install

  update-fixtures-no-install:
    cmd: |
      export UPDATE_FIXTURES=1
      tests/node_modules/.bin/bats tests/bats/docker-compose.bats || tests/node_modules/.bin/bats tests/bats/docker-compose.bats
      export XDEBUG_MODE=off
      export COMPOSER_PROCESS_TIMEOUT=600
      composer --working-dir=installer test -- --filter=testInstall || composer --working-dir=installer test -- --filter=testInstall

  update-docs:
    usage: Update the documentation.
    cmd: |
      composer --working-dir=./docs/.utils install
      yarn --cwd=docs run update-variables

entrypoint:
  - bash
  - "-c"
  - "-e"
  - bash -e -c "$0" "$@"
  - '{{cmd}}'
  - '{{name}}'
